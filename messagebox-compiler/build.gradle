apply plugin: 'java-library'
apply plugin: 'maven'

group = 'com.github.allenxuan'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    compileOnly 'com.github.allenxuan.MessageBox:messagebox-annotation:v3.0.0'
    implementation 'com.squareup:javapoet:1.10.0'
}

sourceCompatibility = "8"
targetCompatibility = "8"

//ext {
//    bintrayRepo = 'maven'
//    bintrayName = 'messagebox-compiler'
//
//    publishedGroupId = 'com.github.allenxuan'
//    libraryName = 'messagebox-compiler'
//    artifact = 'messagebox-compiler'
//
//    libraryDescription = '\t\n' +
//            'MessageBox is a message/event framework for Android/Java. messagebox-annotation is the annotation processor part of MessageBox.'
//
//    siteUrl = 'https://github.com/allenxuan/MessageBoxProject'
//    gitUrl = 'https://github.com/allenxuan/MessageBoxProject.git'
//
//    libraryVersion = '1.1.0'
//
//    developerId = 'allenxuan'
//    developerName = 'Xuanyi Huang'
//    developerEmail = 'allenxuan@gmail.com'
//
//    licenseName = 'The Apache Software License, Version 2.0'
//    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//    allLicenses = ["Apache-2.0"]
//}
//
////********************************************
//apply plugin: 'com.github.dcendents.android-maven'
//
//group = publishedGroupId                               // Maven Group ID for the artifact
//
//install {
//    repositories.mavenInstaller {
//        // This generates POM.xml with proper parameters
//        pom {
//            project {
//                packaging 'aar'
//                groupId publishedGroupId
//                artifactId artifact
//
//                // Add your description here
//                name libraryName
//                description libraryDescription
//                url siteUrl
//
//                // Set your license
//                licenses {
//                    license {
//                        name licenseName
//                        url licenseUrl
//                    }
//                }
//                developers {
//                    developer {
//                        id developerId
//                        name developerName
//                        email developerEmail
//                    }
//                }
//                scm {
//                    connection gitUrl
//                    developerConnection gitUrl
//                    url siteUrl
//
//                }
//            }
//        }
//    }
//}
////********************************************
//apply plugin: 'com.jfrog.bintray'
//
//version = libraryVersion
//
//if (project.hasProperty("android")) { // Android libraries
//    task sourcesJar(type: Jar) {
//        classifier = 'sources'
//        from android.sourceSets.main.java.srcDirs
//    }
//
//    task javadoc(type: Javadoc) {
////        source = android.sourceSets.main.java.srcDirs
////        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//    }
//} else { // Java libraries
//    task sourcesJar(type: Jar, dependsOn: classes) {
//        classifier = 'sources'
//        from sourceSets.main.allSource
//    }
//}
//
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}
//
//artifacts {
//    archives javadocJar
//    archives sourcesJar
//}
//
//// Bintray
//Properties properties = new Properties()
//properties.load(project.rootProject.file('local.properties').newDataInputStream())
//
//bintray {
//    user = properties.getProperty("bintray.user")
//    key = properties.getProperty("bintray.apikey")
//
//    configurations = ['archives']
//    pkg {
//        repo = bintrayRepo
//        name = bintrayName
//        desc = libraryDescription
//        websiteUrl = siteUrl
//        vcsUrl = gitUrl
//        licenses = allLicenses
//        publish = true
//        publicDownloadNumbers = true
//        version {
//            desc = libraryDescription
//            gpg {
//                sign = true //Determines whether to GPG sign the files. The default is false
//                passphrase = properties.getProperty("bintray.gpg.password")
//                //Optional. The passphrase for GPG signing'
//            }
//        }
//    }
//}
////********************************************